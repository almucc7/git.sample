-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public."Libro" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Seccion" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Seccion" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Bibliotecario" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Usuario" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Libro_Autor" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Libro_Autor" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Usuario_Libro" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Usuario_Libro" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Libro_Bibliotecario" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Libro_Bibliotecario" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Estanteria_Genero" DROP CONSTRAINT IF EXISTS None;

ALTER TABLE IF EXISTS public."Estanteria_Genero" DROP CONSTRAINT IF EXISTS None;



DROP TABLE IF EXISTS public."Libro";

CREATE TABLE IF NOT EXISTS public."Libro"
(
    id_libro integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    nombre_libro character varying(50) NOT NULL,
    "a√±o_publicacion" date NOT NULL,
    editorial character varying(30) NOT NULL,
    id_seccion integer NOT NULL,
    PRIMARY KEY (id_libro)
);

DROP TABLE IF EXISTS public."Autor";

CREATE TABLE IF NOT EXISTS public."Autor"
(
    id_autor integer NOT NULL,
    nombre_autor character varying(30) NOT NULL,
    primer_apellido_autor character varying(30) NOT NULL,
    segundo_apellido_autor character varying(30) NOT NULL,
    PRIMARY KEY (id_autor)
);

DROP TABLE IF EXISTS public."Seccion";

CREATE TABLE IF NOT EXISTS public."Seccion"
(
    id_seccion integer NOT NULL,
    nombre_seccion character varying(30) NOT NULL,
    PRIMARY KEY (id_seccion)
);

DROP TABLE IF EXISTS public."Genero";

CREATE TABLE IF NOT EXISTS public."Genero"
(
    id_genero integer NOT NULL,
    nombre_genero character varying(30) NOT NULL,
    PRIMARY KEY (id_genero)
);

DROP TABLE IF EXISTS public."Bibliotecario";

CREATE TABLE IF NOT EXISTS public."Bibliotecario"
(
    id_bibliotecario integer NOT NULL,
    nombre_bibliotecario character varying(30) NOT NULL,
    apellido1_bibliotecario character varying(30) NOT NULL,
    apellido2_bibliotecario character varying(30) NOT NULL,
    email_bibliotecario character varying(30),
    telefono_bibliotecario character varying(20) NOT NULL,
    PRIMARY KEY (id_bibliotecario)
);

DROP TABLE IF EXISTS public."Usuario";

CREATE TABLE IF NOT EXISTS public."Usuario"
(
    id_usuario integer NOT NULL,
    nombre_usuario character varying(30) NOT NULL,
    apellido1_usuario character varying(30) NOT NULL,
    apellido2_usuario character varying(30) NOT NULL,
    email_usuario character varying(35),
    telefono_usuario character varying(20) NOT NULL,
    PRIMARY KEY (id_usuario)
);

DROP TABLE IF EXISTS public."Libro_Autor";

CREATE TABLE IF NOT EXISTS public."Libro_Autor"
(
    "Libro_id_libro" integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    "Autor_id_autor" integer NOT NULL
);

DROP TABLE IF EXISTS public."Usuario_Libro";

CREATE TABLE IF NOT EXISTS public."Usuario_Libro"
(
    "Usuario_id_usuario" integer NOT NULL,
    "Libro_id_libro" integer NOT NULL GENERATED ALWAYS AS IDENTITY
);

DROP TABLE IF EXISTS public."Libro_Bibliotecario";

CREATE TABLE IF NOT EXISTS public."Libro_Bibliotecario"
(
    "Libro_id_libro" integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    "Bibliotecario_id_bibliotecario" integer NOT NULL
);

DROP TABLE IF EXISTS public."Estanteria";

CREATE TABLE IF NOT EXISTS public."Estanteria"
(
    id_estanteria integer NOT NULL,
    numero_estanteria integer NOT NULL,
    PRIMARY KEY (id_estanteria)
);

DROP TABLE IF EXISTS public."Estanteria_Genero";

CREATE TABLE IF NOT EXISTS public."Estanteria_Genero"
(
    "Estanteria_id_estanteria" integer NOT NULL,
    "Genero_id_genero" integer NOT NULL
);

DROP TABLE IF EXISTS public."Prestamo";

CREATE TABLE IF NOT EXISTS public."Prestamo"
(
    id_prestamo integer NOT NULL,
    fecha_debe_devolver date NOT NULL,
    fecha_prestamo date NOT NULL,
    PRIMARY KEY (id_prestamo)
);

DROP TABLE IF EXISTS public."Devolucion";

CREATE TABLE IF NOT EXISTS public."Devolucion"
(
    id_devolucion integer NOT NULL,
    fecha_devolucion date NOT NULL,
    PRIMARY KEY (id_devolucion)
);

ALTER TABLE IF EXISTS public."Libro"
    ADD FOREIGN KEY (id_libro)
    REFERENCES public."Prestamo" (id_prestamo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Seccion"
    ADD FOREIGN KEY (id_seccion)
    REFERENCES public."Libro" (id_libro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Seccion"
    ADD FOREIGN KEY (id_seccion)
    REFERENCES public."Genero" (id_genero) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Bibliotecario"
    ADD FOREIGN KEY (id_bibliotecario)
    REFERENCES public."Prestamo" (id_prestamo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Usuario"
    ADD FOREIGN KEY (id_usuario)
    REFERENCES public."Prestamo" (id_prestamo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Libro_Autor"
    ADD FOREIGN KEY ("Libro_id_libro")
    REFERENCES public."Libro" (id_libro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Libro_Autor"
    ADD FOREIGN KEY ("Autor_id_autor")
    REFERENCES public."Autor" (id_autor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Usuario_Libro"
    ADD FOREIGN KEY ("Usuario_id_usuario")
    REFERENCES public."Usuario" (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Usuario_Libro"
    ADD FOREIGN KEY ("Libro_id_libro")
    REFERENCES public."Libro" (id_libro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Libro_Bibliotecario"
    ADD FOREIGN KEY ("Libro_id_libro")
    REFERENCES public."Libro" (id_libro) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Libro_Bibliotecario"
    ADD FOREIGN KEY ("Bibliotecario_id_bibliotecario")
    REFERENCES public."Bibliotecario" (id_bibliotecario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Estanteria_Genero"
    ADD FOREIGN KEY ("Estanteria_id_estanteria")
    REFERENCES public."Estanteria" (id_estanteria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Estanteria_Genero"
    ADD FOREIGN KEY ("Genero_id_genero")
    REFERENCES public."Genero" (id_genero) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;